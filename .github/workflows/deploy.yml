name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  EC2_HOST: 3.109.209.75
  EC2_USERNAME: ec2-user
  DEPLOY_PATH: /home/ec2-user/arbob-tech-erp
  DOCKER_USERNAME: israrahmad

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push backend
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./backend/Dockerfile
          push: true
          tags: ${{ env.DOCKER_USERNAME }}/arbob-tech-backend:latest

      - name: Build and push frontend
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ env.DOCKER_USERNAME }}/arbob-tech-frontend:latest

  deploy-to-ec2:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Create deployment directory
            mkdir -p ${{ env.DEPLOY_PATH }}
            cd ${{ env.DEPLOY_PATH }}

            # Stop and remove existing containers
            docker-compose -f docker-compose.new.yml down || true
            docker rm -f $(docker ps -aq) || true

            # Remove old images
            docker rmi -f $(docker images -q) || true

            # Login to Docker Hub
            echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ env.DOCKER_USERNAME }}" --password-stdin

            # Pull fresh images
            docker pull ${{ env.DOCKER_USERNAME }}/arbob-tech-backend:latest
            docker pull ${{ env.DOCKER_USERNAME }}/arbob-tech-frontend:latest

            # Start services
            docker-compose -f docker-compose.new.yml up -d

            # Verify containers are running
            docker ps

      - name: Copy docker-compose file
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "docker-compose.new.yml"
          target: "${{ env.DEPLOY_PATH }}"
          strip_components: 0 