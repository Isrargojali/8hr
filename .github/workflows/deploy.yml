name: Build, Push and Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push frontend
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          push: true
          tags: israrahmad/arbob-tech-frontend:latest

      - name: Build and push backend
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          push: true
          tags: israrahmad/arbob-tech-backend:latest

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/private.key
          chmod 600 ~/.ssh/private.key
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          ssh -i ~/.ssh/private.key ec2-user@${{ secrets.EC2_HOST }} '
            # Install Docker if not installed
            if ! command -v docker &> /dev/null; then
                sudo yum update -y
                sudo yum install -y docker
                sudo systemctl start docker
                sudo systemctl enable docker
                sudo usermod -aG docker $USER
                newgrp docker
            fi

            # Install Docker Compose if not installed
            if ! command -v docker-compose &> /dev/null; then
                sudo curl -L "https://github.com/docker/compose/releases/download/v2.23.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                sudo chmod +x /usr/local/bin/docker-compose
            fi

            # Create project directory
            mkdir -p ~/arbob-tech-erp
            cd ~/arbob-tech-erp

            # Create or update docker-compose.yml
            cat > docker-compose.yml << EOL
            version: "3.8"

            services:
              postgres:
                image: postgres:latest
                environment:
                  POSTGRES_USER: postgres
                  POSTGRES_PASSWORD: israr123
                  POSTGRES_DB: Arbob
                volumes:
                  - postgres_data:/var/lib/postgresql/data
                restart: always

              backend:
                image: israrahmad/arbob-tech-backend:latest
                environment:
                  DATABASE_URL: postgresql://postgres:israr123@postgres:5432/Arbob
                  JWT_SECRET: your_jwt_secret_here
                  NODE_ENV: production
                depends_on:
                  - postgres
                ports:
                  - "3000:3000"
                restart: always

              frontend:
                image: israrahmad/arbob-tech-frontend:latest
                ports:
                  - "80:80"
                depends_on:
                  - backend
                restart: always

            volumes:
              postgres_data:
            EOL

            # Stop any running containers
            docker-compose down || true

            # Pull latest images and restart containers
            docker-compose pull
            docker-compose up -d
          ' 