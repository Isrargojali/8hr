name: Build, Push and Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push frontend
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          push: true
          tags: israrahmad/arbob-tech-frontend:latest

      - name: Build and push backend
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          push: true
          tags: israrahmad/arbob-tech-backend:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: 3.109.209.75
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Create project directory
            mkdir -p ~/arbob-tech-erp
            cd ~/arbob-tech-erp

            # Create or update docker-compose.yml
            cat > docker-compose.yml << 'EOL'
            version: '3.8'

            services:
              postgres:
                image: postgres:latest
                environment:
                  POSTGRES_USER: postgres
                  POSTGRES_PASSWORD: israr123
                  POSTGRES_DB: Arbob
                volumes:
                  - postgres_data:/var/lib/postgresql/data
                restart: always

              backend:
                image: israrahmad/arbob-tech-backend:latest
                environment:
                  DATABASE_URL: postgresql://postgres:israr123@postgres:5432/Arbob
                  JWT_SECRET: your_jwt_secret_here
                  NODE_ENV: production
                depends_on:
                  - postgres
                ports:
                  - "3000:3000"
                restart: always

              frontend:
                image: israrahmad/arbob-tech-frontend:latest
                ports:
                  - "80:80"
                depends_on:
                  - backend
                restart: always

            volumes:
              postgres_data:
            EOL

            # Pull latest images and restart containers
            docker-compose pull
            docker-compose up -d 